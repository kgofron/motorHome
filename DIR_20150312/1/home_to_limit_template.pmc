; Homing PLC for Axis 1 (PLC 8)
; 
; This program will home an axis to either the positive or negative limit. The
; homing program performs the following steps:
; 1. Move to the limit switch being used as a reference.
; 2. Perform a homing move away from the limit switch until it deactivates.
; 3. Return to the starting position. 
; 
; Note that the direction set by the home velocity (Ixx23) is opposite to the
; limit switch actually used for homing. This is because the homing movement
; (Step 2 above) is away from the limit, with the controller looking for the
; switch to deactivate to indicate the home position. This is summarised below:
; Home at negative limit -> Positive home velocity
; Home at positive limit -> Negative home velocity
; 
; Wayne Lewis 20140108
; 
; Macros:
; - PLC: PLC number
; - AXIS: motion axis
; - TIMER: PMAC timer to use
; - SERVO: first three digits of axis gate array (I7mn)

; P variables
; P800 - homing state (homing, not homing)
; P801 - homing status (limit search, home search, post-home move)
; P802 - post-home move (0 = return to previous, 1 = stay at zero)

; Initial configuration of state variables.
; Homing State P Variable
P800 = 0

; Homing Status P Variable
P801 = 0

DEL GAT
OPEN PLC8 CLEAR
P801 = 1

;---- Configuring State ----
P800=1
;Save high soft limits to P variables Pxx04..x19
P804=I113
;Save the low soft limits to P variables Pxx20..x35
P820=I114
;Save the home capture flags to P variables Pxx36..x51
P836=I7012
;Store value to use in moving off a flag in P variables Pxx52..x67
P852=10
;Save the limit flags to P variables Pxx68..x83
P868=I124
;Save the current position to P variables Pxx84..x99
P884=M162
;Clear the soft limits
I113=0
I114=0

if (P801=1)

	;---- FastSearch State ----
  ; Move to the limit switch
	if (P801=1)
		P800=8
		; Execute the move commands
		M172=100000000*(-I123/ABS(I123))
		cmd "#1J:*"
		; Wait for the move to complete
		I5511 = 20 * 8388608/I10 ; Small delay to start moving
		while (I5511 > 0)
		endw
		I5511 = 600000 * 8388608/I10 ; Now start checking the conditions
		while (M140=0) ; At least one motor should not be In Position
		and (M142=0) ; No following errors should be set for any motor
		and (I5511 > 0) ; Check for timeout
		and (P801 = 1) ; Check that we didn't abort
		endw

		; Check why we left the while loop
		if (M142=1) ; If a motor hit a following error
			P801 = 4
		endif
		if (I5511<0 or I5511=0) ; If we timed out
			P801 = 3
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (P801=1)
		P886=(P886-M162)/(I108*32)-(I126/16)
	endif

	;---- Homing State ----
	if (P801=1)
		P800=4
    ; Set the capture flag correctly            
    ; If homing direction is negative, we are homing using the positive
    ; limit switch and vice versa.              
    if (I123<0)
      I7013=1
    else
      I7013=2
    endif             
		; Execute the move commands
		I7012=P852
		cmd "#1hm"
		; Wait for the move to complete
		I5511 = 20 * 8388608/I10 ; Small delay to start moving
		while (I5511 > 0)
		endw
		I5511 = 600000 * 8388608/I10 ; Now start checking the conditions
    P805 = 0
		while (M140=0) ; At least one motor should not be In Position
		and (M142=0) ; No following errors should be set for any motor
		and (P805=0) ; Should not stop on position limit for selected motors
		and (I5511 > 0) ; Check for timeout
		and (P801 = 1) ; Check that we didn't abort
    if (I123 < 0 and M132 = 1)
      P805 = 1
    endif
    if (I123 > 0 and M131 = 1)
      P805 = 1
    endif
		endw
		; Check why we left the while loop
		if (M142=1) ; If a motor hit a following error
			P801 = 4
		endif
		if (M130=1) ; If a motor hit a limit
			P801 = 5
		endif
		if (I5511<0 or I5511=0) ; If we timed out
			P801 = 3
		endif
	endif

	;---- Check if all motors have homed ----
	if (P801=1)
	and (M145=0)
		P801=6
	endif

	;---- PostHomeMove State ----
	if (P801=1)
    ; Check the type of post-home move
    if (P802 = 0)
      P800=5
      ; Execute the move commands
      M172=P884/(I108*32)
      cmd "#1J=*"
      ; Wait for the move to complete
      I5511 = 20 * 8388608/I10 ; Small delay to start moving
      while (I5511 > 0)
      endw
      I5511 = 600000 * 8388608/I10 ; Now start checking the conditions
      while (M140=0) ; At least one motor should not be In Position
      and (M142=0) ; No following errors should be set for any motor
      and (M130=0) ; Should not stop on position limit for selected motors
      and (I5511 > 0) ; Check for timeout
      and (P801 = 1) ; Check that we didn't abort
      endw
      ; Check why we left the while loop
      if (M142=1) ; If a motor hit a following error
        P801 = 4
      endif
      if (M130=1) ; If a motor hit a limit
        P801 = 5
      endif
      if (I5511<0 or I5511=0) ; If we timed out
        P801 = 3
      endif
    endif
	endif

endif

;---- Done ----
if (P801 = 1)
	;If we've got this far without failing, set status and state done
	P801=0
	P800=7
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (M142=0)
	cmd "#1J/"
endif
;Restore the high soft limits from P variables Pxx04..x19
I113=P804
;Restore the low soft limits from P variables Pxx20..x35
I114=P820
;Restore the home capture flags from P variables Pxx36..x51
I7012=P836
;Restore the limit flags to P variables Pxx68..x83
I124=P868

DISABLE PLC8
CLOSE


